{"mappings":"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","sources":["src/state.ts","src/router.ts","src/pages/home/index.ts","src/pages/instructions/index.ts","src/pages/play/index.ts","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-dd5f4533f61e5cf90f17431eb72eff2f.js","node_modules/@parcel/runtime-js/lib/runtime-bde9fbe619ec0499da8b8325a73d94aa.js","node_modules/@parcel/runtime-js/lib/runtime-e10c25b837cba2ad0b7330b36dfe5d9f.js","node_modules/@parcel/runtime-js/lib/runtime-a0d4808f140636fa12df9318dca74528.js","node_modules/@parcel/runtime-js/lib/runtime-e62a6b5a7815b63b8c3f75754568145b.js","node_modules/@parcel/runtime-js/lib/runtime-b851cde983dae6d5eb9476ab581b4b0c.js","node_modules/@parcel/runtime-js/lib/runtime-d9d2177e57ade45300febd567e352705.js","node_modules/@parcel/runtime-js/lib/runtime-da8bcd55e21c367d208e9396863a4de3.js","node_modules/@parcel/runtime-js/lib/runtime-9b78a43aea0fd337514099ae6a7d5e75.js","src/components/text-custom/index.ts","src/components/btn-default-custom/index.ts","src/components/move/index.ts","src/pages/result/index.ts","src/components/hands-component/index.ts","src/index.ts"],"sourcesContent":["type Move = \"piedra\" | \"papel\" | \"tijera\";\nexport const state = {\n  data: {\n    currentGame: {\n      playerMove: \"\",\n      machineMove: \"\",\n    },\n    history: [],\n  },\n  listeners: [],\n  init() {\n    const stateSaved = localStorage.getItem(\"state-saved-game\");\n    if (JSON.parse(stateSaved) != null) {\n      this.setState(JSON.parse(stateSaved));\n    }\n  },\n  getState() {\n    return this.data;\n  },\n  setState(newState: {}) {\n    this.data = newState;\n    for (const cb of this.listeners) {\n      cb();\n    }\n    localStorage.setItem(\"state-saved-game\", JSON.stringify(newState));\n  },\n  subscribe(cb: () => any) {\n    this.listeners.push(cb);\n  },\n  setMove(move: Move) {\n    const currentState = this.getState();\n    currentState.currentGame.playerMove = move;\n    currentState.currentGame.machineMove = this.chooseAleatoryMove();\n    currentState.history.push({\n      playerMove: currentState.currentGame.playerMove,\n      machineMove: currentState.currentGame.machineMove,\n    });\n    this.setState(currentState);\n  },\n  chooseAleatoryMove() {\n    const movesList = [\"piedra\", \"papel\", \"tijera\"];\n    const randomMove = Math.floor(Math.random() * movesList.length);\n    return movesList[randomMove];\n  },\n  getCurrentPlay() {\n    const currentState = this.getState();\n    return currentState.currentGame;\n  },\n  getCurrentWhoWins() {\n    const currentState = this.getState();\n    const currentPlayerMove = currentState.currentGame.playerMove;\n    const currentMachineMove = currentState.currentGame.machineMove;\n    return this.getWhoWins(currentPlayerMove, currentMachineMove);\n  },\n  getWhoWins(playerMove: Move, machineMove: Move): number {\n    const win = [\n      playerMove == \"piedra\" && machineMove == \"tijera\",\n      playerMove == \"papel\" && machineMove == \"piedra\",\n      playerMove == \"tijera\" && machineMove == \"papel\",\n    ];\n    const lose = [\n      playerMove == \"piedra\" && machineMove == \"papel\",\n      playerMove == \"papel\" && machineMove == \"tijera\",\n      playerMove == \"tijera\" && machineMove == \"piedra\",\n    ];\n    if (win.includes(true)) {\n      return 1;\n    } else if (lose.includes(true)) {\n      return -1;\n    } else {\n      return 0;\n    }\n  },\n  getHistoryOfPoints() {\n    let playerPoints = 0;\n    let machinePoints = 0;\n    const historyGames = this.getState().history;\n    for (const game of historyGames) {\n      if (this.getWhoWins(game.playerMove, game.machineMove) == 1) {\n        playerPoints++;\n      }\n      if (this.getWhoWins(game.playerMove, game.machineMove) == -1) {\n        machinePoints++;\n      }\n    }\n    return {\n      playerPoints,\n      machinePoints,\n    };\n  },\n};\n","import { initHomePage } from \"./pages/home\";\nimport { initInstructionsPage } from \"./pages/instructions\";\nimport { initPlayPage } from \"./pages/play\";\n\nconst routes = [\n  {\n    path: /\\/dwf-m5-desafio\\/home$/,\n    component: initHomePage,\n  },\n  {\n    path: /\\/dwf-m5-desafio\\/instructions$/,\n    component: initInstructionsPage,\n  },\n  {\n    path: /\\/dwf-m5-desafio\\/play$/,\n    component: initPlayPage,\n  },\n];\n\nexport function initRouter(container: Element) {\n  function goTo(pathname) {\n    history.pushState({}, \"\", \"/dwf-m5-desafio\" + pathname);\n    handleRoute(pathname);\n  }\n  function handleRoute(path) {\n    // Recorremos las rutas predefinidas y si alguna coincide (haciendo test con RegEx) ejecutamos la función component que va a devolver una \"página\" o \"escena\" para meterla al container, a este container le sacamos el elemento anterior si es que lo tiene\n    for (const r of routes) {\n      if (r.path.test(path)) {\n        // A cada componente (páginas ahora) le pasamos la función goTo en caso de que la quiera usar internamente para redirigir toda la página a alguna otra ruta predefinida\n        const componentToLoad = r.component({ goTo: goTo });\n        if (container.firstChild) {\n          container.firstChild.remove();\n        }\n        // Metemos esta escena o página en el contenedor (que es un div con un id #root)\n        container.appendChild(componentToLoad);\n      }\n    }\n  }\n  // location.pathname.replace(\"/dwf-m5-desafio/\", \"/\");\n  // Esto va a ser lo que se ejecute cuando llamamos al init router, en caso de que el pathname sea \"/\", llamamos a goTo y redireccionamos todo a /welcome (ejecutaríamos el handleRoute finalmente lo mismo, en la función goTo)\n  if (location.pathname == \"/dwf-m5-desafio/\") {\n    goTo(\"/home\");\n  } else {\n    // En caso que no sea \"/\" que siga su flujo normal, el redireccionamiento lo hacemos para que la ruta de entrada por defecto de esta página sea /welcome\n    handleRoute(location.pathname);\n  }\n  // Esto lo que  va a hacer es escuchar el evento cuando el usuario clickee en las flechas (de volver para atrás o adelante de las páginas), entonces, contemplando esto ejecutamos handleRoute con el pathname de la página a la que vuelva, porque sin esto estamos contemplando solamente cuando el usuario entra haciendo reload, y no contemplaríamos que use estas flechitas\n  window.onpopstate = () => {\n    handleRoute(location.pathname);\n  };\n}\n","export function initHomePage(params) {\n  const div = document.createElement(\"div\");\n  div.innerHTML = `<section class=\"home\">\n  <div class=\"home-content\">\n    <text-custom variant=\"title\" class=\"home__title\"\n      >Piedra Papel ó Tijera</text-custom\n    >\n    <btn-default-custom class=\"home__btn\">Empezar</btn-default-custom>\n  </div>\n  <div class=\"home-hands-container\">\n  <hands-component></hands-component>\n  </div>\n</section>`;\n  const btn = div.querySelector(\".home__btn\");\n  btn.addEventListener(\"click\", () => {\n    params.goTo(\"/instructions\");\n  });\n\n  return div;\n}\n","export function initInstructionsPage(params) {\n  const div = document.createElement(\"div\");\n  div.innerHTML = `<section class=\"instructions\">\n  <div class=\"instructions-content\">\n    <text-custom class=\"instructions__title\">\n      Presioná jugar y elegí: piedra, papel o tijera antes de que pasen\n      los 3 segundos.\n    </text-custom>\n    <btn-default-custom class=\"instructions__btn\"\n      >¡Jugar!</btn-default-custom\n    >\n  </div>\n  <div class=\"ins-hands-container\">\n  <hands-component></hands-component>\n  </div>\n</section>`;\n  const btn = div.querySelector(\".instructions__btn\");\n  btn.addEventListener(\"click\", () => {\n    params.goTo(\"/play\");\n  });\n  return div;\n}\n","import { state } from \"../../state\";\n//* (Paso 3, ver primero los otros)\nfunction viewMove(playerMoveContainer, machineMoveContainer) {\n  // Creo 2 componentes a-move (muestran una jugada)\n  const playerMoveChosen = document.createElement(\"a-move\");\n  const machineMoveChosen = document.createElement(\"a-move\");\n  // Busco la jugada actual (devuelve un objeto)\n  const currentPlay = state.getCurrentPlay();\n  // Les paso el atributo typemove según sea el caso\n  playerMoveChosen.setAttribute(\"typemove\", currentPlay.playerMove);\n  machineMoveChosen.setAttribute(\"typemove\", currentPlay.machineMove);\n  //! Ver las dimensiones del componente, capaz sirve agrandar/achicar un poco según el dispositivo\n  // Los añado en los contenedores que me enviaron como parámetros\n  playerMoveContainer.appendChild(playerMoveChosen);\n  machineMoveContainer.appendChild(machineMoveChosen);\n}\n\nexport function initPlayPage(params) {\n  const div = document.createElement(\"div\");\n  div.innerHTML = `<section class=\"play\">\n  <div class=\"play-content\">\n    <div class=\"spinner\"></div>\n    <h2 variant=\"title\" class=\"spinner__text\"></h2>\n    <div class=\"hands-container\">\n     <a-move typemove=\"tijera\" class=\"move-icon\"></a-move>\n     <a-move typemove=\"piedra\" class=\"move-icon\"></a-move>\n     <a-move typemove=\"papel\" class=\"move-icon\"></a-move>\n    </div>\n    </div>\n    <div class=\"move-player-container\"></div>\n    <div class=\"move-machine-container\"></div>\n</section>`;\n  //? Paso 1: Escuchar si el usuario elige un movimiento\n  // Busco todos los elementos que expresan un movimiento del usuario\n  const moveIconList = div.querySelectorAll(\".move-icon\") as any;\n  // Inicializo una variable playerMove para, si le hacen click a algún ícono cambiar esta variable al valor del elementos clickeado\n  // En caso de que no haga click en ninguno redirijo a instructions, pero eso no pasa acá\n  let playerMove = null;\n  for (const i of moveIconList) {\n    // Recorro el array con todos los elementos y escucho de cada uno el custom event typemove, que devuelve el tipo de movimiento que hizo el usuario según el elemento que clickea: piedra - papel - tijera\n    i.addEventListener(\"typemove\", (e: any) => {\n      // A todos elementos cada vez que el usuario haga click (o se ejecute el typemove, que es lo mismo) les remuevo las clases (si es que las tienen) set-opacity y shrink-icon, esto para que tengan el comportamiento por defecto cada vez que se clickee en alguno y luego agregar la lógica de \"opacar\" los elementos no clickeados (es como hacer un reset de estos \"efectos\" cada vez que se haga click en alguna mano)\n      i.classList.remove(\"set-opacity\");\n      i.classList.remove(\"shrink-icon\");\n      //Cada vez que alguien hace click en un elemento recorro el array que tiene todos los elementos \"elegibles\" y comparo, si el atributo typemove es diferente al movimiento que nos devuelve el custom event, les doy las clases set-opacity y shrink-icon, es decir, todos los elementos que no sean clickeados van a tener estas propiedades (como sé cuales son los elementos que tengo creados, por ejemplo el elemento con el typemove piedra, si es igual a lo que me devuelve el custom event, quiere decir que se clickeó a ese elemento, entonces, a los demás les aplico las clases para opacarlos )\n      for (const icon of moveIconList) {\n        if (icon.getAttribute(\"typemove\") != e.detail.move) {\n          icon.classList.add(\"set-opacity\");\n          icon.classList.add(\"shrink-icon\");\n        }\n      }\n      // Finalmente a playerMove le doy el valor que me devuelva el custom event, osea va a tener el tipo de movimiento que eligió el usuario\n      playerMove = e.detail.move;\n    });\n  }\n  //? Paso 2: Acá se va a generar la cuenta regresiva, una vez que llegue a -2 (en pantalla se verá hasta 0) va a parar de ejecutarse y, en caso de que playerMove sea diferente a null (o sea, si el usuario clickeó alguna jugada) se va a llamar al state para crear una nueva jugada pasandole el movimiento que eligió el usuario (sigue en viewMove), en caso contrario, redireccionaremos el sitio a la escena instrucciones\n  let counter = 3;\n  const countdownNumberEl = div.querySelector(\".spinner__text\") as any;\n  const generateCountdown = () => {\n    countdownNumberEl.innerHTML = `${counter}`;\n    counter--;\n    if (counter == -2) {\n      clearInterval(interval); // Paro de ejecutar el setInterval\n      const playContent = div.querySelector(\".play-content\") as any;\n      playContent.style.display = \"none\"; // Oculto todo el contenedor de elección de la jugada y el spinner, para dar paso a mostrar otros elementos en pantalla\n      if (playerMove != null) {\n        state.setMove(playerMove);\n        const movePlayerContainer = div.querySelector(\".move-player-container\");\n        const moveMachineContainer = div.querySelector(\n          \".move-machine-container\"\n        );\n        viewMove(movePlayerContainer, moveMachineContainer); //? Paso 3\n        // 3 segundos después de que se muestre la jugada entre el usuario y la máquina, se va a ejecutar la función viewResult, llamando al componente view-result y metiéndolo en el div de esta escena\n        const viewResult = () => {\n          const resultScene = document.createElement(\"view-result\");\n          resultScene.classList.add(\"set-font-family\");\n          resultScene.setAttribute(\"result\", state.getCurrentWhoWins()); //Obtengo el último resultado guardado en el state y lo paso como parámetro al componente\n          resultScene.setAttribute(\n            \"player-points\",\n            JSON.stringify(state.getHistoryOfPoints().playerPoints) //getHistoryOfPoints devuelve un objeto\n          ); //Obtengo los puntos de todas las jugadas, y le paso los del usuario\n          resultScene.setAttribute(\n            \"Machine-points\",\n            JSON.stringify(state.getHistoryOfPoints().machinePoints)\n          ); //Obtengo los puntos de todas las jugadas, y le paso los de la máquina\n          // Escucho el evento newgame (nuevo juego), que es cuando el usuario hace click en volver a jugar, y redirecciono el sitio a la escena play\n          resultScene.addEventListener(\"newgame\", () => {\n            params.goTo(\"/play\");\n          });\n          div.appendChild(resultScene);\n        };\n        setTimeout(viewResult, 3000);\n      } else {\n        params.goTo(\"/instructions\");\n      }\n    }\n  };\n  const interval = setInterval(generateCountdown, 1000);\n  return div;\n}\n\n// comentar el paso 3\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./bundle-url').getBundleURL() + \"piedra-for-component.9126c655.png\"","module.exports = require('./bundle-url').getBundleURL() + \"papel-for-component.6e5b5516.png\"","module.exports = require('./bundle-url').getBundleURL() + \"tijera-for-component.56fa437d.png\"","module.exports = require('./bundle-url').getBundleURL() + \"tijera.0e6cd8c0.png\"","module.exports = require('./bundle-url').getBundleURL() + \"piedra.1f909a13.png\"","module.exports = require('./bundle-url').getBundleURL() + \"papel.a7b76899.png\"","module.exports = require('./bundle-url').getBundleURL() + \"ganaste-icon.7f930fb5.png\"","module.exports = require('./bundle-url').getBundleURL() + \"perdiste-icon.ef0e3b8a.png\"","module.exports = require('./bundle-url').getBundleURL() + \"empate-icon.991cb981.png\"","export function initTextCustom() {\n  customElements.define(\n    \"text-custom\",\n    class extends HTMLElement {\n      shadow: ShadowRoot;\n      variant: string;\n      strike: boolean;\n      constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: \"open\" });\n      }\n      connectedCallback() {\n        //? Busco el atributo variant que es en el cual se define que tipo de texto quiere el usuario de nuestro componente (si es que existe) y busco el atributo strike (también es opcional)\n        this.variant = this.getAttribute(\"variant\");\n        this.strike = JSON.parse(this.getAttribute(\"strike\"));\n        const style = document.createElement(\"style\");\n        style.textContent = `\n        .set-margin-to-zero{\n          margin: 0;\n                  }\n                  .title{\n                    font-weight: 700;\n                    font-size: 80px;\n                  }\n                  .subtitle{\n                    font-weight: 400;\n                    font-size: 55px;\n                  }\n                  .big-text{\n                    font-weight: 400;\n                    font-size: 45px;\n                  }\n                  .small-text {\n                    font-weight: 600;\n                    font-size: 40px;\n                  }\n                  .strike {\n                    text-decoration:line-through;\n                  }\n                  .set-line-height{\n                    line-height: 92.1%;\n                  }\n                  `;\n        this.shadow.appendChild(style);\n        this.render();\n      }\n      render() {\n        //* Creo un conjunto de tipos de textos predefinidos que nos pueden enviar, con la clase que le vamos a asignar y con el tipo de elemento que vamos a crear\n        const textsTypes = [\n          { name: \"title\", class: \"title\", elementType: \"h1\" },\n          { name: \"subtitle\", class: \"subtitle\", elementType: \"h2\" },\n          { name: \"small-text\", class: \"small-text\", elementType: \"p\" },\n          { name: \"big-text\", class: \"big-text\", elementType: \"p\" },\n        ];\n        //? Acá pregunto si la propiedad variant (que es un atributo del customElement) existe, en caso de que exista recorro este array de tipos de textos posibles y añado las clases correspondientes, en caso de que no me pasen un atributo variant, voy a crear un elemento por defecto del tipo small-text\n        if (this.variant) {\n          for (const t of textsTypes) {\n            if (t.name == this.variant) {\n              const textEl = document.createElement(t.elementType);\n              textEl.classList.add(t.class);\n              textEl.classList.add(\"set-margin-to-zero\");\n              textEl.classList.add(\"set-line-height\");\n              if (this.strike == true) {\n                textEl.classList.add(\"strike\");\n              }\n              textEl.textContent = this.textContent;\n              this.shadow.appendChild(textEl);\n            }\n          }\n        } else {\n          const textEl = document.createElement(\"p\");\n          textEl.classList.add(\"small-text\");\n          textEl.classList.add(\"set-margin-to-zero\");\n          textEl.classList.add(\"set-line-height\");\n          if (this.strike == true) {\n            textEl.classList.add(\"strike\");\n          }\n          textEl.textContent = this.textContent;\n          this.shadow.appendChild(textEl);\n        }\n      }\n    }\n  );\n}\n","export function btnDefaultCustom() {\n  customElements.define(\n    \"btn-default-custom\",\n    class extends HTMLElement {\n      shadow: ShadowRoot;\n      constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: \"open\" });\n        const style = document.createElement(\"style\");\n        style.textContent = `\n        .btn-default {\n          font-family: inherit;\n          font-weight: 400;\n          font-size: 45px;\n          border: 10px solid var(--btn-blue-color-focus);\n          border-radius: 10px;\n          padding: 7px 6px;\n          background-color: var(--btn-blue-color);\n          color: #FFF;\n          width: 100%;\n        }\n        .btn-default:hover {\n          cursor: pointer;\n          background-color: #0f74f8;\n        }\n        `;\n        this.shadow.appendChild(style);\n        this.render();\n      }\n      render() {\n        // Creo un botón que va a vivir dentro de este sub-dom\n        const btnDefault = document.createElement(\"button\");\n        btnDefault.classList.add(\"btn-default\");\n        // Le pongo como texto el texto que me escriban normalmente en la etiqueta\n        btnDefault.textContent = this.textContent;\n        this.shadow.appendChild(btnDefault);\n      }\n    }\n  );\n}\n","const imgPiedra = require(\"url:../../img/piedra-for-component.png\");\nconst imgPapel = require(\"url:../../img/papel-for-component.png\");\nconst imgTijera = require(\"url:../../img/tijera-for-component.png\");\n\nexport function moveComponent() {\n  customElements.define(\n    \"a-move\",\n    class extends HTMLElement {\n      shadow: ShadowRoot;\n      typemove: string;\n      constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: \"open\" });\n      }\n      connectedCallback() {\n        this.typemove = this.getAttribute(\"typemove\").toLowerCase();\n        const style = document.createElement(\"style\");\n        style.textContent = `\n        .icon {\n          cursor: pointer;\n        }\n        @media (max-width:769px) {\n          .icon{\n            width: 90px;\n            height: 170px;\n          }\n        }\n        `;\n        this.shadow.appendChild(style);\n        this.render();\n      }\n      render() {\n        const div = document.createElement(\"div\");\n        div.innerHTML = `<img src =\"${this.findIconImageUrl()}\" class=\"icon\"></img>`;\n        div.querySelector(\".icon\").addEventListener(\"click\", () => {\n          const MessageEvent = new CustomEvent(\"typemove\", {\n            detail: {\n              move: this.typemove,\n            },\n          });\n          this.dispatchEvent(MessageEvent);\n        });\n        this.shadow.appendChild(div);\n      }\n      findIconImageUrl() {\n        if (this.typemove == \"piedra\") {\n          return imgPiedra;\n        } else if (this.typemove == \"papel\") {\n          return imgPapel;\n        } else if (this.typemove == \"tijera\") {\n          return imgTijera;\n        }\n      }\n    }\n  );\n}\n","const winIcon = require(\"url:../../img/ganaste-icon.png\");\nconst loseIcon = require(\"url:../../img/perdiste-icon.png\");\nconst tieIcon = require(\"url:../../img/empate-icon.png\");\n\nexport function resultSceneComponent() {\n  customElements.define(\n    \"view-result\",\n    class extends HTMLElement {\n      shadow: ShadowRoot;\n      result: number;\n      playerPoints: number;\n      machinePoints: number;\n      iconImgUrl: any;\n      bgColor: string;\n      constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: \"open\" });\n      }\n      connectedCallback() {\n        // Busco el atributo result: (1 gana el usuario, -1 gana la máquina, 0 es empate)\n        this.result = JSON.parse(this.getAttribute(\"result\"));\n        this.playerPoints = JSON.parse(this.getAttribute(\"player-points\"));\n        this.machinePoints = JSON.parse(this.getAttribute(\"machine-points\"));\n        const style = document.createElement(\"style\");\n        style.textContent = `\n        .background-setter {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          opacity: 0.7;\n        }\n        .result {\n          position: fixed;\n          top: 0;\n          width: 100vw;\n          height: 100vh;\n        }\n        .result-content {\n          height: 100%;\n          display: grid;\n          justify-content: center;\n          align-items: center;\n          gap: 21px;\n        }\n        .container__star{\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n        .score {\n          width: 259px;\n          border: 10px solid black;\n          border-radius: 10px;\n          background-color: #fff;\n          margin: 0 auto;\n          display: flex;\n          flex-direction: column;\n          justify-content:center;\n          gap: 25px;\n          padding: 20px 10px 20px 10px;\n          text-align: center;\n        }\n        .score__text{\n          text-align: right;\n        }\n        `;\n        this.shadow.appendChild(style);\n        // Antes de ejecutar render seteo los colores y el texto que voy a mostrar, internamente esta función pregunta si el usuario ganó, si la máquina ganó o si es empate, y en los distintos casos muestra un color y una estrella diferente\n        this.setBgColorAndIconUrl();\n        this.render();\n      }\n      render() {\n        const div = document.createElement(\"div\");\n        div.innerHTML = `<div class=\"background-setter\"></div>\n        <section class=\"result\">\n          <div class=\"result-content\">\n            <div class=\"container__star\">\n              <img src =\"${this.iconImgUrl}\" alt=\"${this.result + \"icon\"}\">\n            </div>\n            <div class=\"score\">\n              <div class=\"score__title\">\n                <text-custom variant=\"subtitle\">Score</text-custom>\n              </div>\n              <div class=\"score__text\">\n                <text-custom variant=\"big-text\">Vos: ${\n                  this.playerPoints\n                }</text-custom>\n                <text-custom variant=\"big-text\">Máquina: ${\n                  this.machinePoints\n                }</text-custom>\n              </div>\n            </div>\n            <btn-default-custom class=\"result__btn\"\n              >Volver a Jugar</btn-default-custom\n            >\n          </div>\n        </section>`;\n        //Creo un custom event para que se pueda escuchar cuando le hacen click al botón volver a jugar desde fuera del componente\n        div.querySelector(\".result__btn\").addEventListener(\"click\", () => {\n          const MessageEvent = new CustomEvent(\"newgame\");\n          this.dispatchEvent(MessageEvent);\n        });\n        const bgPage = div.querySelector(\".background-setter\") as any;\n        bgPage.style.backgroundColor = this.bgColor;\n        this.shadow.appendChild(div);\n      }\n      setBgColorAndIconUrl() {\n        if (this.result == 1) {\n          this.bgColor = \"#888949E5\";\n          this.iconImgUrl = winIcon;\n        } else if (this.result == -1) {\n          this.bgColor = \"#894949e5\";\n          this.iconImgUrl = loseIcon;\n        } else if (this.result == 0) {\n          this.bgColor = \"#495f89e5\";\n          this.iconImgUrl = tieIcon;\n        }\n      }\n    }\n  );\n}\n","const imgTijera = require(\"url:../../img/tijera.png\");\nconst imgPiedra = require(\"url:../../img/piedra.png\");\nconst imgPapel = require(\"url:../../img/papel.png\");\n\nexport function handsComponent() {\n  customElements.define(\n    \"hands-component\",\n    class extends HTMLElement {\n      shadow: ShadowRoot;\n      constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: \"open\" });\n        const style = document.createElement(\"style\");\n        style.textContent = `\n        .hands-container {\n            width: 100vw;\n            display: grid;\n            grid-template-columns: repeat(3, auto);\n            justify-content: center;\n            gap: 46.71px;\n          }\n          @media (min-width: 769px) {\n            .hands-container {\n              gap: 65px;\n            }\n          }\n          .hand-icon {\n            width: 70px;\n            height: 120px;\n          }\n          @media (min-width: 769px) {\n            .hand-icon {\n              width: 79px;\n              height: 141px;\n            }\n          }\n          `;\n        this.shadow.appendChild(style);\n        this.render();\n      }\n      render() {\n        const div = document.createElement(\"div\");\n        div.innerHTML = `  <div class=\"hands-container\">\n          <img class=\"hand-icon\" src=\"${imgTijera}\" alt=\"\" />\n          <img class=\"hand-icon\" src=\"${imgPiedra}\" alt=\"\" />\n          <img class=\"hand-icon\" src=\"${imgPapel}\" alt=\"\" />\n        </div>`;\n        this.shadow.appendChild(div);\n      }\n    }\n  );\n}\n","import { state } from \"./state\";\nimport { initRouter } from \"./router\";\n//? COMPONENTS\nimport { initTextCustom } from \"./components/text-custom\";\nimport { btnDefaultCustom } from \"./components/btn-default-custom\";\nimport { moveComponent } from \"./components/move\";\nimport { handsComponent } from \"./components/hands-component\";\nimport { resultSceneComponent } from \"./pages/result\";\n\n(function initComponents() {\n  initTextCustom();\n  btnDefaultCustom();\n  moveComponent();\n  resultSceneComponent();\n  handsComponent();\n})();\n//? =========\nconst root = document.getElementById(\"root\");\ninitRouter(root);\n//Inicializamos el state cada vez que se recargue la página, esto va a hacer que cargue los datos del localStorage siempre que se recargue la página o se entre por primera vez\nstate.init();\n"],"names":["$3bf3b04a899cbbe9a92c99cd4cfcddb4$export$c837a8b98c265ae3","data","currentGame","playerMove","machineMove","history","listeners","init","stateSaved","localStorage","getItem","JSON","parse","this","setState","getState","newState","cb","setItem","stringify","subscribe","push","setMove","move","currentState","chooseAleatoryMove","movesList","Math","floor","random","length","getCurrentPlay","getCurrentWhoWins","currentPlayerMove","currentMachineMove","getWhoWins","lose","includes","getHistoryOfPoints","playerPoints","machinePoints","historyGames","game","$9e876f2cce4bbc7ebf26ded1f367ede6$var$routes","path","component","params","div","document","createElement","innerHTML","querySelector","addEventListener","goTo","moveIconList","querySelectorAll","i","e","classList","remove","icon","getAttribute","detail","add","counter","countdownNumberEl","interval","setInterval","clearInterval","style","display","playerMoveContainer","machineMoveContainer","playerMoveChosen","machineMoveChosen","currentPlay","setAttribute","appendChild","$f4a0b9cfe9f99bb7ca45d2f8a115b8ba$var$viewMove","setTimeout","resultScene","$10da859f8926f997eca867931986be87$var$bundleURL","$10da859f8926f997eca867931986be87$var$getBaseURL","url","replace","$10da859f8926f997eca867931986be87$export$da289beea9c5b10d","Error","err","matches","stack","match","$10da859f8926f997eca867931986be87$var$getBundleURL","$c9a7c8ae9277f4de0c2e2c6b99ad532e$exports","parcelRequire","getBundleURL","$7034b6c292d4cd58c0f4dff79f0aec05$exports","$9c27f20366b0b74aa3d6dfbab641a681$exports","$b8bfd5458be93f60e479e7349f9624e1$exports","$d6090ba36513e4abb6dfe2116e4faff1$exports","$61c82d199b16d04fecf02d260e353d9b$exports","$3499896fb2a08e9f88e9be85c90b0182$exports","$e82731832bdff1e2222b1cb4f7b44194$exports","$3a5c5e36655caca3e3188516a83bcd16$exports","customElements","define","HTMLElement","super","shadow","attachShadow","mode","connectedCallback","variant","strike","textContent","render","textsTypes","name","class","elementType","t","textEl","btnDefault","typemove","toLowerCase","findIconImageUrl","MessageEvent1","CustomEvent","dispatchEvent","result","setBgColorAndIconUrl","iconImgUrl","backgroundColor","bgColor","container","pathname","pushState","handleRoute","r","test","componentToLoad","firstChild","location","window","onpopstate","$9e876f2cce4bbc7ebf26ded1f367ede6$export$f03b0d45d4202f55","getElementById"],"version":3,"file":"index.07b556d3.js.map"}